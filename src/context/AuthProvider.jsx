import { useState, useEffect } from "react";
import { AuthContext } from "./AuthContext";
import { checkLs } from "../utils/checkLs";

// –ù–∞–ø–∏—Å–∞–ª–∏ –æ–±—ã—á–Ω—ã–π —Ä–µ–∞–∫—Ç-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
// –í –≤–∏–¥–µ –ø—Ä–æ–ø—Å–∞ children
const AuthProvider = ({ children }) => {
  // checkLs –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª—Å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ user
  const [user, setUser] = useState(checkLs()); // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–µ–∂–∞—Ç—å –∏–Ω—Ñ–∞ –æ —é–∑–µ—Ä–µ
  const [isInitialized, setIsInitialized] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

  useEffect(() => {
    // –ê —Ç—É—Ç –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –õ–°, –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
    try {
      const storedUser = localStorage.getItem("user");
      const storedToken = localStorage.getItem("token");

      if (storedUser && storedToken) {
        console.log(
          "üîÑ AuthProvider: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage"
        );
        setUser(JSON.parse(storedUser));
      } else {
        console.log("üîÑ AuthProvider: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
        setUser(null);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:", error);
      setUser(null);
    } finally {
      setIsInitialized(true); // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    }
  }, []);

  // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª—Å
  const updateUserInfo = (userData) => {
    setUser(userData);
    if (userData) {
      localStorage.setItem("user", JSON.stringify(userData));
    } else {
      localStorage.removeItem("user");
    }
  };

  const login = (loginData) => {
    updateUserInfo(loginData);
    return true;
  };

  const logout = () => {
    console.log("üîÑ AuthProvider: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");
    updateUserInfo(null);
    // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    localStorage.removeItem("token");
    return true;
  };
  // –í —Å–∞–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–∏–Ω—É—Ç—å —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è,
  // –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ö–æ—Ç–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  return (
    <AuthContext.Provider
      value={{ user, login, logout, updateUserInfo, isInitialized }}
    >
      {children}
    </AuthContext.Provider>
  );
};

export default AuthProvider;
